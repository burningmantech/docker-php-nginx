# Docs:
# https://help.github.com/en/articles/about-github-actions
# https://help.github.com/en/articles/configuring-a-workflow
# https://help.github.com/en/articles/workflow-syntax-for-github-actions


name: CI/CD

on: [push]


jobs:

  info:

    name: Workflow information
    runs-on: ubuntu-16.04
    timeout-minutes: 1

    steps:

      - name: Print GitHub Context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "${GITHUB_CONTEXT}"

      - name: Print Job Context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "${JOB_CONTEXT}"

      - name: Print Steps Context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "${STEPS_CONTEXT}"

      - name: Print Runner Context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "${RUNNER_CONTEXT}"

      - name: Print Strategy Context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "${STRATEGY_CONTEXT}"

      - name: Print Matrix Context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "${MATRIX_CONTEXT}"


  docker:
    name: Build Docker image

    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:

      - name: Checkout source code
        uses: actions/checkout@v1

      - name: Build Docker image
        run: ./bin/build

      - name: Save Docker image
        run: |
          mkdir images
          docker image save $(docker images php-nginx -q) | gzip -9 > images/images.tgz

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v1
        with:
          name: images
          path: images


  test-docker:

    name: Test Docker image

    needs: [docker]

    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:

      - name: Checkout source code
        uses: actions/checkout@v1

      - name: Download Docker image artifact
        uses: actions/download-artifact@v1
        with:
          name: images

      - name: Load Docker image
        run: gzip --uncompress --stdout images/images.tgz | docker image load

      - name: Test Docker image
        run: ./bin/test
