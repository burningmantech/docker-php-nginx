# Docs: https://docs.github.com/en/actions


name: CI/CD

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]


jobs:

  docker:
    name: Build Docker image

    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Harden CI
        uses: step-security/harden-runner@v2.0.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            auth.docker.io:443
            dl-cdn.alpinelinux.org:443
            github.com:443
            production.cloudflare.docker.com:443
            registry-1.docker.io:443

      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: ./bin/build;

      - name: Save Docker image
        run: |
          mkdir images;
          docker image save $(docker images --format "{{.Repository}}:{{.Tag}}" burningman/php-nginx) | gzip -9 > images/images.tgz;

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v3
        with:
          name: images
          path: images

  test-docker:
    name: Test Docker image

    needs: [docker]

    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:

      - name: Harden CI
        uses: step-security/harden-runner@v2.0.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            github.com:443

      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Download Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: images

      - name: Load Docker image
        run: gzip --uncompress --stdout images/images.tgz | docker image load;

      - name: Test Docker image
        run: ./bin/test;

  push-dockerhub:
    name: Push image to Docker Hub

    needs: [test-docker]
    if: github.ref == 'refs/heads/master'

    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:

      - name: Harden CI
        uses: step-security/harden-runner@v2.0.0
        with:
          egress-policy: audit

      # Need source code to push README file contents to Docker Hub
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Download Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: images

      - name: Load Docker image
        run: gzip --uncompress --stdout images/images.tgz | docker image load;

      - name: Log into Docker Hub
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "${DOCKER_PASSWORD}" | docker login --username="${DOCKER_USER}" --password-stdin;

      - name: Push image to Docker Hub
        run: |
          for image_name in $(docker images --format "{{.Repository}}:{{.Tag}}" burningman/php-nginx); do
            echo "Pushing ${image_name}";
            docker push "${image_name}";
          done;

      - name: Update Docker Hub description
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          token="$(                                                                              \
            curl                                                                                 \
              --silent                                                                           \
              --request POST                                                                     \
              --header "Content-Type: application/json"                                          \
              --data "{\"username\": \"${DOCKER_USER}\", \"password\": \"${DOCKER_PASSWORD}\"}"  \
              "https://hub.docker.com/v2/users/login/"                                           \
            | sed 's|{.*"token": *"\([^"]*\)".*}|\1|'                                            \
          )";
          curl --silent --output /dev/null                                \
            --request PATCH                                               \
            --header "Authorization: JWT ${token}"                        \
            --data-urlencode "full_description@README.md"                 \
            https://hub.docker.com/v2/repositories/burningman/php-nginx/  \
            ;
